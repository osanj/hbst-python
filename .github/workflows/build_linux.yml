name: Build, Test and Publish Wheels for Linux

on:
  pull_request:
    branches:
      - main
  release:
    types: [published]


jobs:
  build:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    env:
      DEBUG: 0
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: true
        fetch-depth: 1

    - name: Build wheels
      run: |
        ./build.sh x86_64 3.6
        ./build.sh x86_64 3.7
        ./build.sh x86_64 3.8
        ./build.sh x86_64 3.9

    - name: Save wheel
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse/hbst*.whl

  test:
    needs: [build]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9']

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: false
        fetch-depth: 0

    - name: Download wheels
      uses: actions/download-artifact@v2
      with:
        name: wheels
        path: wheelhouse/

    - name: Test wheel
      run: ./test.sh x86_64 ${{ matrix.python-version }} wheelhouse


  test_release:
    if: github.event_name == 'release' && github.event.release.prerelease
    needs: [build, test]
    runs-on: ubuntu-latest
    environment: test-release
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse/

      - name: Upload all wheels
        run: |
          python -m pip install twine
          python -m twine upload --repository testpypi -u ${{ secrets.TEST_PYPI_USERNAME }} -p ${{ secrets.TEST_PYPI_PASSWORD }} --skip-existing wheelhouse/hbst*


  release:
    if: github.event_name == 'release' && !github.event.release.prerelease
    needs: [build, test]
    runs-on: ubuntu-latest
    environment: release
    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
          path: wheelhouse/

      - name: Upload all wheels
        run: |
          python -m pip install twine
          python -m twine upload -u ${{ secrets.PYPI_USERNAME }} -p ${{ secrets.PYPI_PASSWORD }} --skip-existing wheelhouse/hbst*